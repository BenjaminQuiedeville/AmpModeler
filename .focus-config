[6]  # Version number. Do not delete.

[[workspace]]
# These directories and files will be scanned when a workspace is opened so that search etc. works.
./

[ignore]
# Files and directories matching the following wildcards will not be loaded or descended into
# Example:
# *.js - will ignore all files with a '.js' extension
# tmp* - will ignore any files or directories which start with 'tmp'
# C:/project/dirname/** - will ignore everything under `dirname`
# C:/project/dirname/*  - will ignore all files under `dirname`, but not recursively
.git
.vs
.vscode
build
libs/juce/extras
libs/juce/docs
libs/juce/examples
*.pdb
*.rdi
*.ilk
*.exp


[allow]
# Files and directories matching the wildcards in this section will be loaded, even if they are ignored in the previous section.
# NOTE: known binary file extensions are ignored by default (*.exe, *.obj etc.). If this is not what you want, you can explicitly allow them here.
*.jl
*.inc
*.cmake

[[build commands]]
build_working_dir:      %PROJECT_CONFIG_DIR%
open_panel_on_build:    true  #  <- any settings specified here will apply to all commands unless overridden
close_panel_on_success: true
auto_jump_to_error:     true

[Debug Build]   # <- command name. Can be arbitrary
build_command:          cmake --build build --config Debug  # should be an executable or a script
build_working_dir:      %PROJECT_CONFIG_DIR%
# timeout_in_seconds:     5             # if you don't want a timeout, don't specify it
error_regex:            ^(?P<file>.*)\((?P<line>\d+),?(?P<col>\d+)?\)[ ]?: (?P<type>error|warning) (?P<msg>.*)$
key_binding:            F5

[Debug Build & Run]   # <- command name. Can be arbitrary
build_command:          cmake --build build --config Debug  # should be an executable or a script
build_working_dir:      %PROJECT_CONFIG_DIR%
# timeout_in_seconds:     5             # if you don't want a timeout, don't specify it
run_command:            raddbg.exe --auto_run "C:\Program Files\Cycling '74\Max 8\Max.exe"     # will be run if build succeeds
error_regex:            ^(?P<file>.*)\((?P<line>\d+),?(?P<col>\d+)?\)[ ]?: (?P<type>error|warning) (?P<msg>.*)$
run_working_dir:        %PROJECT_CONFIG_DIR%      # working dir for the run command
key_binding:            Ctrl-F5


[Run]                   # <- You could have commands that don't build anything and just run something
run_command:            W:/VSTHost/vsthost.exe build\AmpModeler_artefacts\Debug\VST3\AmpModeler.vst3\Contents\x86_64-win\AmpModeler.vst3
run_working_dir:        %PROJECT_CONFIG_DIR%
key_binding:            Ctrl-F4

[Release Debug]
build_command:          cmake --build build --config RelWithDebInfo
key_binding:            F9

[Release]
build_command:          cmake --build build --config Release
key_binding:            Ctrl-F9
